Created AST Node: numConst: 10
Created AST Node: ID: a
Created AST Node: Symbol: =
Created AST Node: numConst: 20
Created AST Node: ID: b
Created AST Node: Symbol: =
Created AST Node: numConst: 30
Created AST Node: ID: c
Created AST Node: Symbol: =
Created AST Node: numConst: 5
Created AST Node: ID: d
Created AST Node: Symbol: =
Created AST Node: strConst: "some string!"
Created AST Node: ID: s
Created AST Node: Symbol: =
Created AST Node: strConst: "some other string!"
Created AST Node: ID: t
Created AST Node: Symbol: =
Created AST Node: ID: a
Created AST Node: ID: b
Created AST Node: ID: c
Created AST Node: ID: d
Created AST Node: Symbol: /
Created AST Node: Symbol: *
Created AST Node: Symbol: +
Created AST Node: ID: e
Created AST Node: Symbol: =
Created AST Node: numConst: 5
Created AST Node: ID: f
Created AST Node: Symbol: =
Created AST Node: ID: s
Created AST Node: ID: g
Created AST Node: Symbol: =
Created AST Node: ID: a
Created AST Node: ID: b
Created AST Node: Symbol: +
Created AST Node: ID: h
Created AST Node: Symbol: =
Created AST Node: ID: a
Created AST Node: ID: c
Created AST Node:  : <
Created AST Node: ID: s
Created AST Node: ID: a
Created AST Node: Symbol: =
Created AST Node: if: if
Created AST Node: numConst: 20
Created AST Node: ID: e
Created AST Node: Symbol: =
Created AST Node: ID: b
Created AST Node: ID: a
Created AST Node:  : <
Created AST Node: ID: d
Created AST Node: ID: f
Created AST Node: Symbol: =
Created AST Node: if: if
Created AST Node: numConst: 1
Created AST Node: ID: f
Created AST Node: Symbol: =
Created AST Node: numConst: 0
Created AST Node: ID: e
Created AST Node: Symbol: =
Created AST Node: ID: e
Created AST Node: numConst: 20
Created AST Node:  : <
Created AST Node: ID: e
Created AST Node: ID: f
Created AST Node: Symbol: +
Created AST Node: ID: e
Created AST Node: Symbol: =
Created AST Node: while: while
Created AST Node: ID: char
Created AST Node: ID: s
Created AST Node:  : in
Created AST Node: ID: s
Created AST Node: ID: s
Created AST Node: Symbol: =
Created AST Node: for: for
Created AST Node: strConst: "the end!"
Created AST Node: ID: z
Created AST Node: Symbol: =

SYMBOL TABLE: 
Name   Type   Scope   Line No. Value
[a		var		0		27		s]
[b		var		0		27		20]
[c		var		0		22		30]
[d		var		1		28		5]
[s		var		1		41		s]
[t		var		0		11		"some other string!"]
[e		var		1		36		+]
[f		var		1		36		1]
[g		var		0		17		s]
[h		var		0		18		+]
[char		var		0		40		]
[z		var		0		45		"the end!"]

---------------------

Intermediate Code Generation: 

a = 10
b = 20
c = 30
d = 5
s = "some string!"
t = "some other string!"
T0 = c / d
T1 = b * T0
T2 = a + T1
e = T2
f = 5
g = s
h = a + b
a = s
if a < c GOTO 0x55cb143d2080
ifFalse a < c GOTO Next Node
e = 20
f = d
if b < a GOTO 0x55cb143d2790
ifFalse b < a GOTO Next Node
f = 1
e = 0
e = e + f
if e < 20 GOTO 0x55cb143d3290
ifFalse e < 20 GOTO Next Node
s = s
if char in s GOTO 0x55cb143d3830
ifFalse char in s GOTO Next Node
z = "the end!"

End of Intermediate Code Generation

---------------------
Code Optimisation

Performing Dead Code removal
Performing constant propogation

Substitute: a with its value: s
Substitute: b with its value: 20
Substitute: c with its value: 30
Substitute: d with its value: 5
Substitute: s with its value: s
Variable: t, is never used, we can remove it.
Substitute: f with its value: 1
Variable: g, is never used, we can remove it.
Variable: e, is never used, we can remove it.
Variable: z, is never used, we can remove it.

End of Code Optimisation

---------------------
