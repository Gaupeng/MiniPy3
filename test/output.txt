
SYMBOL TABLE: 
Name   Type   Scope   Line No. Value
[a		var		1		43		a]
[b		var		0		37		20]
[c		var		0		37		30]
[d		var		0		37		5]
[s		var		0		42		"someString!"]
[t		var		0		11		"someOtherString!"]
[e		var		0		37		+]
[f		var		0		37		1]
[g		var		0		33		20]
[x		var		0		36		15]
[y		var		0		37		*]
[char		var		0		42		]
[z		var		0		47		"The-End!"]

---------------------
└──=
    ├──a
    └──10
└──=
    ├──b
    └──20
└──=
    ├──c
    └──30
└──=
    ├──d
    └──5
└──=
    ├──s
    └──"someString!"
└──=
    ├──t
    └──"someOtherString!"
└──=
    ├──e
    └──+
        ├──a
        └──*
            ├──b
            └──/
                ├──c
                └──d
└──=
    ├──f
    └──+
        ├──a
        └──b
└──=
    ├──a
    └──s
└──if
    ├──<
    │   ├──a
    │   └──c
    └──=
        ├──a
        └──s
└──=
    ├──g
    └──20
└──=
    ├──f
    └──d
└──if
    ├──<
    │   ├──b
    │   └──a
    └──=
        ├──f
        └──d
└──=
    ├──f
    └──1
└──=
    ├──e
    └──0
└──=
    ├──e
    └──+
        ├──e
        └──f
└──while
    ├──<
    │   ├──e
    │   └──g
    └──=
        ├──e
        └──+
            ├──e
            └──f
└──=
    ├──x
    └──15
└──=
    ├──y
    └──*
        ├──a
        └──+
            ├──b
            └──/
                ├──c
                └──-
                    ├──d
                    └──+
                        ├──e
                        └──f
└──=
    ├──a
    └──a
└──for
    ├──in
    │   ├──char
    │   └──s
    └──=
        ├──a
        └──a
└──=
    ├──z
    └──"The-End!"

---------------------

Intermediate Code Generation: 

a = 10
b = 20
c = 30
d = 5
s = "someString!"
t = "someOtherString!"
T0 = c / d
T1 = b * T0
T2 = a + T1
e = T2
f = a + b
ifFalse a < c GOTO L0
a = s
L0: g = 20
ifFalse b < a GOTO L1
f = d
L1: f = 1
e = 0
L2: ifFalse e < g GOTO L3
e = e + f
goto L2
L3: x = 15
T3 = e + f
T4 = d - T3
T5 = c / T4
T6 = b + T5
T7 = a * T6
y = T7
L4: ifFalse char in s GOTO L5
a = a
goto L4
L5: z = "The-End!"

End of Intermediate Code Generation

---------------------
Code Optimisation

Performing Dead Code removal
Performing constant propogation

Substitute: a with its value: a
Substitute: b with its value: 20
Substitute: c with its value: 30
Substitute: d with its value: 5
Substitute: s with its value: "someString!"
Variable: t, is never used, we can remove it.
Variable: g, is never used, we can remove it.
Substitute: f with its value: 1
Variable: e, is never used, we can remove it.
Variable: x, is never used, we can remove it.
Variable: z, is never used, we can remove it.

End of Code Optimisation

---------------------
Assembly Code:

LD R0, #10
ST a, R0

LD R0, #20
ST b, R0

LD R0, #30
ST c, R0

LD R0, #5
ST d, R0

str: .asciiz "someString!"
LD R0, str
ST s, R0

str: .asciiz "someOtherString!"
LD R0, str
ST t, R0

LD R0, c
DIV R0, R0, d
ST T0, R0

LD R0, b
MUL R0, R0, T0
ST T1, R0

LD R0, a
ADD R0, R0, T1
ST T2, R0

LD R0, T2
ST e, R0

LD R0, a
ADD R0, R0, b
ST f, R0

LD  R0, a
LD  R1, c
CMP  R0, R1
BGE L0
LD R2, s
ST a, R2

L0:
LD R0, #20
ST g, R0

LD  R0, b
LD  R1, a
CMP  R0, R1
BGE L1
LD R2, d
ST f, R2

L1:
LD R0, #1
ST f, R0

LD R0, #0
ST e, R0

L2:
LD  R0, e
LD  R1, g
CMP  R0, R1
BGE L3
LD R2, e
ADD R2, R2, f
ST e, R2
GOTO L2

L3:
LD R0, #15
ST x, R0

LD R0, e
ADD R0, R0, f
ST T3, R0

LD R0, d
SUB R0, R0, T3
ST T4, R0

LD R0, c
DIV R0, R0, T4
ST T5, R0

LD R0, b
ADD R0, R0, T5
ST T6, R0

LD R0, a
MUL R0, R0, T6
ST T7, R0

LD R0, T7
ST y, R0

LD R0, #0
L4:
LD  R1, s(R0)
ADD R0, R0, #1
CMP R1, 0x00
BEQ L5
LD R2, a
ST a, R2
GOTO L4

L5:
str: .asciiz "The-End!"
LD R0, str
ST z, R0

