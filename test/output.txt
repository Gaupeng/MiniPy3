
SYMBOL TABLE: 
Name   Type   Scope   Line No. Value
[a		var		1		43		a]
[b		var		0		37		20]
[c		var		0		37		30]
[d		var		0		37		5]
[s		var		0		42		"someString!"]
[t		var		0		11		"someOtherString!"]
[e		var		0		37		+]
[f		var		0		37		1]
[g		var		0		33		20]
[x		var		0		36		15]
[y		var		0		37		*]
[char		var		0		42		]
[z		var		0		47		"The-End!"]

---------------------
└──=
    ├──a
    └──10
└──=
    ├──b
    └──20
└──=
    ├──c
    └──30
└──=
    ├──d
    └──5
└──=
    ├──s
    └──"someString!"
└──=
    ├──t
    └──"someOtherString!"
└──=
    ├──e
    └──+
        ├──a
        └──*
            ├──b
            └──/
                ├──c
                └──d
└──=
    ├──f
    └──+
        ├──a
        └──b
└──=
    ├──a
    └──s
└──if
    ├──<
    │   ├──a
    │   └──c
    └──=
        ├──a
        └──s
└──=
    ├──g
    └──20
└──=
    ├──f
    └──d
└──if
    ├──<
    │   ├──b
    │   └──a
    └──=
        ├──f
        └──d
└──=
    ├──f
    └──1
└──=
    ├──e
    └──0
└──=
    ├──e
    └──+
        ├──e
        └──f
└──while
    ├──<
    │   ├──e
    │   └──g
    └──=
        ├──e
        └──+
            ├──e
            └──f
└──=
    ├──x
    └──15
└──=
    ├──y
    └──*
        ├──a
        └──+
            ├──b
            └──/
                ├──c
                └──-
                    ├──d
                    └──+
                        ├──e
                        └──f
└──=
    ├──a
    └──a
└──for
    ├──in
    │   ├──char
    │   └──s
    └──=
        ├──a
        └──a
└──=
    ├──z
    └──"The-End!"

---------------------

Intermediate Code Generation: 

a = 10
b = 20
c = 30
d = 5
s = "someString!"
t = "someOtherString!"
T0 = c / d
T1 = b * T0
T2 = a + T1
e = T2
f = a + b
ifFalse a < c GOTO L0
a = s
L0: g = 20
ifFalse b < a GOTO L1
f = d
L1: f = 1
e = 0
L2: ifFalse e < g GOTO L3
e = e + f
goto L2
L3: x = 15
T3 = e + f
T4 = d - T3
T5 = c / T4
T6 = b + T5
T7 = a * T6
y = T7
L4: ifFalse char in s GOTO L5
a = a
goto L4
L5: z = "The-End!"

End of Intermediate Code Generation

---------------------
Code Optimisation

Performing Dead Code removal
Performing constant propogation

Substitute: a with its value: a
Substitute: b with its value: 20
Substitute: c with its value: 30
Substitute: d with its value: 5
Substitute: s with its value: "someString!"
Variable: t, is never used, we can remove it.
Variable: g, is never used, we can remove it.
Substitute: f with its value: 1
Variable: e, is never used, we can remove it.
Variable: x, is never used, we can remove it.
Variable: z, is never used, we can remove it.

End of Code Optimisation

---------------------
Assembly Code:

LD R0, #10
ST a, R0

LD R1, #20
ST b, R1

LD R2, #30
ST c, R2

LD R3, #5
ST d, R3

str: .asciiz "someString!"
LD R4, str
ST s, R4

str: .asciiz "someOtherString!"
LD R4, str
ST t, R4

LD R4, c
DIV R4, R4, d
ST T0, R4

LD R5, b
MUL R5, R5, T0
ST T1, R5

LD R6, a
ADD R6, R6, T1
ST T2, R6

LD R7, T2
ST e, R7

LD R8, a
ADD R8, R8, b
ST f, R8

LD  R9, a
LD  R10, c
CMP  R9, R10
BGE L0
LD R11, s
ST a, R11

L0:
LD R12, #20
ST g, R12

LD  R13, b
LD  R14, a
CMP  R13, R14
BGE L1
LD R15, d
ST f, R15

L1:
LD R16, #1
ST f, R16

LD R17, #0
ST e, R17

L2:
LD  R18, e
LD  R19, g
CMP  R18, R19
BGE L3
LD R20, e
ADD R20, R20, f
ST e, R20
GOTO L2

L3:
LD R21, #15
ST x, R21

LD R22, e
ADD R22, R22, f
ST T3, R22

LD R23, d
SUB R23, R23, T3
ST T4, R23

LD R24, c
DIV R24, R24, T4
ST T5, R24

LD R25, b
ADD R25, R25, T5
ST T6, R25

LD R26, a
MUL R26, R26, T6
ST T7, R26

LD R27, T7
ST y, R27

LD R28, #0
L4:
LD  R29, s(R28)
ADD R28, R28, #1
CMP R29, 0x00
BEQ L5
LD R30, a
ST a, R30
GOTO L4

L5:
str: .asciiz "The-End!"
LD R31, str
ST z, R31

