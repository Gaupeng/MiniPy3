Terminals unused in grammar

   KEYWORD
   PRINT
   ELSE
   IN
   DEF
   CLASS
   RETURN
   RET
   COMMA
   SEMICOLON
   ERROR


State 3 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: stmt S
    2  | NL S
    3  | ENDF

    4 cond_lit: ID
    5         | NUMBER
    6         | STRING_LIT

    7 stmt: expre
    8     | loops
    9     | arith_expr

   10 repeat_stmt: %empty
   11            | stmt repeat_stmt

   12 expre: ID EQ arith_expr
   13      | ID SPACE EQ SPACE arith_expr

   14 arith_expr: cond_lit bin_op arith_expr
   15           | cond_lit SPACE bin_op SPACE arith_expr
   16           | cond_lit

   17 loops: FOR SPACE conditions COLON body
   18      | FOR LBRACKET conditions RBRACKET COLON body
   19      | WHILE SPACE conditions COLON body
   20      | WHILE LBRACKET conditions RBRACKET COLON body
   21      | IF SPACE conditions COLON body
   22      | IF LBRACKET conditions RBRACKET COLON body

   23 body: NL TAB stmt repeat_stmt body
   24     | NL SPACE stmt repeat_stmt body
   25     | NL

   26 conditions: cond_lit SPACE relop SPACE cond_lit
   27           | cond_lit

   28 relop: GT
   29      | LT
   30      | GTE
   31      | LTE

   32 bin_op: PLUS
   33       | DIVIDE
   34       | MINUS
   35       | MUL


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD (258)
STRING_LIT (259) 6
NUMBER (260) 5
ID (261) 4 12 13
ENDF (262) 3
PRINT (263)
NL (264) 2 23 24 25
COLON (265) 17 18 19 20 21 22
GTE (266) 30
LTE (267) 31
GT (268) 28
LT (269) 29
TAB (270) 23
FOR (271) 17 18
WHILE (272) 19 20
IF (273) 21 22
ELSE (274)
IN (275)
DEF (276)
CLASS (277)
RETURN (278)
RET (279)
SPACE (280) 13 15 17 19 21 24 26
COMMA (281)
SEMICOLON (282)
ERROR (283)
PLUS (284) 32
MINUS (285) 34
MUL (286) 35
DIVIDE (287) 33
LBRACKET (288) 18 20 22
RBRACKET (289) 18 20 22
EQ (290) 12 13


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
S (37)
    on left: 1 2 3, on right: 0 1 2
cond_lit (38)
    on left: 4 5 6, on right: 14 15 16 26 27
stmt (39)
    on left: 7 8 9, on right: 1 11 23 24
repeat_stmt (40)
    on left: 10 11, on right: 11 23 24
expre (41)
    on left: 12 13, on right: 7
arith_expr (42)
    on left: 14 15 16, on right: 9 12 13 14 15
loops (43)
    on left: 17 18 19 20 21 22, on right: 8
body (44)
    on left: 23 24 25, on right: 17 18 19 20 21 22 23 24
conditions (45)
    on left: 26 27, on right: 17 18 19 20 21 22
relop (46)
    on left: 28 29 30 31, on right: 26
bin_op (47)
    on left: 32 33 34 35, on right: 14 15


State 0

    0 $accept: . S $end

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    ENDF        shift, and go to state 4
    NL          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    S           go to state 9
    cond_lit    go to state 10
    stmt        go to state 11
    expre       go to state 12
    arith_expr  go to state 13
    loops       go to state 14


State 1

    6 cond_lit: STRING_LIT .

    $default  reduce using rule 6 (cond_lit)


State 2

    5 cond_lit: NUMBER .

    $default  reduce using rule 5 (cond_lit)


State 3

    4 cond_lit: ID .
   12 expre: ID . EQ arith_expr
   13      | ID . SPACE EQ SPACE arith_expr

    SPACE  shift, and go to state 15
    EQ     shift, and go to state 16

    SPACE     [reduce using rule 4 (cond_lit)]
    $default  reduce using rule 4 (cond_lit)


State 4

    3 S: ENDF .

    $default  reduce using rule 3 (S)


State 5

    2 S: NL . S

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    ENDF        shift, and go to state 4
    NL          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    S           go to state 17
    cond_lit    go to state 10
    stmt        go to state 11
    expre       go to state 12
    arith_expr  go to state 13
    loops       go to state 14


State 6

   17 loops: FOR . SPACE conditions COLON body
   18      | FOR . LBRACKET conditions RBRACKET COLON body

    SPACE     shift, and go to state 18
    LBRACKET  shift, and go to state 19


State 7

   19 loops: WHILE . SPACE conditions COLON body
   20      | WHILE . LBRACKET conditions RBRACKET COLON body

    SPACE     shift, and go to state 20
    LBRACKET  shift, and go to state 21


State 8

   21 loops: IF . SPACE conditions COLON body
   22      | IF . LBRACKET conditions RBRACKET COLON body

    SPACE     shift, and go to state 22
    LBRACKET  shift, and go to state 23


State 9

    0 $accept: S . $end

    $end  shift, and go to state 24


State 10

   14 arith_expr: cond_lit . bin_op arith_expr
   15           | cond_lit . SPACE bin_op SPACE arith_expr
   16           | cond_lit .

    SPACE   shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    MUL     shift, and go to state 28
    DIVIDE  shift, and go to state 29

    $default  reduce using rule 16 (arith_expr)

    bin_op  go to state 30


State 11

    1 S: stmt . S

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    ENDF        shift, and go to state 4
    NL          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    S           go to state 31
    cond_lit    go to state 10
    stmt        go to state 11
    expre       go to state 12
    arith_expr  go to state 13
    loops       go to state 14


State 12

    7 stmt: expre .

    $default  reduce using rule 7 (stmt)


State 13

    9 stmt: arith_expr .

    $default  reduce using rule 9 (stmt)


State 14

    8 stmt: loops .

    $default  reduce using rule 8 (stmt)


State 15

   13 expre: ID SPACE . EQ SPACE arith_expr

    EQ  shift, and go to state 32


State 16

   12 expre: ID EQ . arith_expr

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 10
    arith_expr  go to state 34


State 17

    2 S: NL S .

    $default  reduce using rule 2 (S)


State 18

   17 loops: FOR SPACE . conditions COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 36


State 19

   18 loops: FOR LBRACKET . conditions RBRACKET COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 37


State 20

   19 loops: WHILE SPACE . conditions COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 38


State 21

   20 loops: WHILE LBRACKET . conditions RBRACKET COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 39


State 22

   21 loops: IF SPACE . conditions COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 40


State 23

   22 loops: IF LBRACKET . conditions RBRACKET COLON body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 35
    conditions  go to state 41


State 24

    0 $accept: S $end .

    $default  accept


State 25

   15 arith_expr: cond_lit SPACE . bin_op SPACE arith_expr

    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    MUL     shift, and go to state 28
    DIVIDE  shift, and go to state 29

    bin_op  go to state 42


State 26

   32 bin_op: PLUS .

    $default  reduce using rule 32 (bin_op)


State 27

   34 bin_op: MINUS .

    $default  reduce using rule 34 (bin_op)


State 28

   35 bin_op: MUL .

    $default  reduce using rule 35 (bin_op)


State 29

   33 bin_op: DIVIDE .

    $default  reduce using rule 33 (bin_op)


State 30

   14 arith_expr: cond_lit bin_op . arith_expr

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 10
    arith_expr  go to state 43


State 31

    1 S: stmt S .

    $default  reduce using rule 1 (S)


State 32

   13 expre: ID SPACE EQ . SPACE arith_expr

    SPACE  shift, and go to state 44


State 33

    4 cond_lit: ID .

    $default  reduce using rule 4 (cond_lit)


State 34

   12 expre: ID EQ arith_expr .

    $default  reduce using rule 12 (expre)


State 35

   26 conditions: cond_lit . SPACE relop SPACE cond_lit
   27           | cond_lit .

    SPACE  shift, and go to state 45

    $default  reduce using rule 27 (conditions)


State 36

   17 loops: FOR SPACE conditions . COLON body

    COLON  shift, and go to state 46


State 37

   18 loops: FOR LBRACKET conditions . RBRACKET COLON body

    RBRACKET  shift, and go to state 47


State 38

   19 loops: WHILE SPACE conditions . COLON body

    COLON  shift, and go to state 48


State 39

   20 loops: WHILE LBRACKET conditions . RBRACKET COLON body

    RBRACKET  shift, and go to state 49


State 40

   21 loops: IF SPACE conditions . COLON body

    COLON  shift, and go to state 50


State 41

   22 loops: IF LBRACKET conditions . RBRACKET COLON body

    RBRACKET  shift, and go to state 51


State 42

   15 arith_expr: cond_lit SPACE bin_op . SPACE arith_expr

    SPACE  shift, and go to state 52


State 43

   14 arith_expr: cond_lit bin_op arith_expr .

    $default  reduce using rule 14 (arith_expr)


State 44

   13 expre: ID SPACE EQ SPACE . arith_expr

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 10
    arith_expr  go to state 53


State 45

   26 conditions: cond_lit SPACE . relop SPACE cond_lit

    GTE  shift, and go to state 54
    LTE  shift, and go to state 55
    GT   shift, and go to state 56
    LT   shift, and go to state 57

    relop  go to state 58


State 46

   17 loops: FOR SPACE conditions COLON . body

    NL  shift, and go to state 59

    body  go to state 60


State 47

   18 loops: FOR LBRACKET conditions RBRACKET . COLON body

    COLON  shift, and go to state 61


State 48

   19 loops: WHILE SPACE conditions COLON . body

    NL  shift, and go to state 59

    body  go to state 62


State 49

   20 loops: WHILE LBRACKET conditions RBRACKET . COLON body

    COLON  shift, and go to state 63


State 50

   21 loops: IF SPACE conditions COLON . body

    NL  shift, and go to state 59

    body  go to state 64


State 51

   22 loops: IF LBRACKET conditions RBRACKET . COLON body

    COLON  shift, and go to state 65


State 52

   15 arith_expr: cond_lit SPACE bin_op SPACE . arith_expr

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit    go to state 10
    arith_expr  go to state 66


State 53

   13 expre: ID SPACE EQ SPACE arith_expr .

    $default  reduce using rule 13 (expre)


State 54

   30 relop: GTE .

    $default  reduce using rule 30 (relop)


State 55

   31 relop: LTE .

    $default  reduce using rule 31 (relop)


State 56

   28 relop: GT .

    $default  reduce using rule 28 (relop)


State 57

   29 relop: LT .

    $default  reduce using rule 29 (relop)


State 58

   26 conditions: cond_lit SPACE relop . SPACE cond_lit

    SPACE  shift, and go to state 67


State 59

   23 body: NL . TAB stmt repeat_stmt body
   24     | NL . SPACE stmt repeat_stmt body
   25     | NL .

    TAB    shift, and go to state 68
    SPACE  shift, and go to state 69

    $default  reduce using rule 25 (body)


State 60

   17 loops: FOR SPACE conditions COLON body .

    $default  reduce using rule 17 (loops)


State 61

   18 loops: FOR LBRACKET conditions RBRACKET COLON . body

    NL  shift, and go to state 59

    body  go to state 70


State 62

   19 loops: WHILE SPACE conditions COLON body .

    $default  reduce using rule 19 (loops)


State 63

   20 loops: WHILE LBRACKET conditions RBRACKET COLON . body

    NL  shift, and go to state 59

    body  go to state 71


State 64

   21 loops: IF SPACE conditions COLON body .

    $default  reduce using rule 21 (loops)


State 65

   22 loops: IF LBRACKET conditions RBRACKET COLON . body

    NL  shift, and go to state 59

    body  go to state 72


State 66

   15 arith_expr: cond_lit SPACE bin_op SPACE arith_expr .

    $default  reduce using rule 15 (arith_expr)


State 67

   26 conditions: cond_lit SPACE relop SPACE . cond_lit

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 33

    cond_lit  go to state 73


State 68

   23 body: NL TAB . stmt repeat_stmt body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    cond_lit    go to state 10
    stmt        go to state 74
    expre       go to state 12
    arith_expr  go to state 13
    loops       go to state 14


State 69

   24 body: NL SPACE . stmt repeat_stmt body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    cond_lit    go to state 10
    stmt        go to state 75
    expre       go to state 12
    arith_expr  go to state 13
    loops       go to state 14


State 70

   18 loops: FOR LBRACKET conditions RBRACKET COLON body .

    $default  reduce using rule 18 (loops)


State 71

   20 loops: WHILE LBRACKET conditions RBRACKET COLON body .

    $default  reduce using rule 20 (loops)


State 72

   22 loops: IF LBRACKET conditions RBRACKET COLON body .

    $default  reduce using rule 22 (loops)


State 73

   26 conditions: cond_lit SPACE relop SPACE cond_lit .

    $default  reduce using rule 26 (conditions)


State 74

   23 body: NL TAB stmt . repeat_stmt body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    $default  reduce using rule 10 (repeat_stmt)

    cond_lit     go to state 10
    stmt         go to state 76
    repeat_stmt  go to state 77
    expre        go to state 12
    arith_expr   go to state 13
    loops        go to state 14


State 75

   24 body: NL SPACE stmt . repeat_stmt body

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    $default  reduce using rule 10 (repeat_stmt)

    cond_lit     go to state 10
    stmt         go to state 76
    repeat_stmt  go to state 78
    expre        go to state 12
    arith_expr   go to state 13
    loops        go to state 14


State 76

   11 repeat_stmt: stmt . repeat_stmt

    STRING_LIT  shift, and go to state 1
    NUMBER      shift, and go to state 2
    ID          shift, and go to state 3
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    $default  reduce using rule 10 (repeat_stmt)

    cond_lit     go to state 10
    stmt         go to state 76
    repeat_stmt  go to state 79
    expre        go to state 12
    arith_expr   go to state 13
    loops        go to state 14


State 77

   23 body: NL TAB stmt repeat_stmt . body

    NL  shift, and go to state 59

    body  go to state 80


State 78

   24 body: NL SPACE stmt repeat_stmt . body

    NL  shift, and go to state 59

    body  go to state 81


State 79

   11 repeat_stmt: stmt repeat_stmt .

    $default  reduce using rule 11 (repeat_stmt)


State 80

   23 body: NL TAB stmt repeat_stmt body .

    $default  reduce using rule 23 (body)


State 81

   24 body: NL SPACE stmt repeat_stmt body .

    $default  reduce using rule 24 (body)
